package com.skilldistillery.armadasite.entities;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "upgrade")
public class Upgrade {

	//FIELDS
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String name;
	private boolean unique;
	private String alignment;
	private String description;
	@Column(name = "ship_type")
	private String shipType;
	private int cost;
	
	//RELATIONSHIPS
	
	@ManyToMany(mappedBy = "upgrades")
	@JsonIgnore
	private List<ShipBuild> shipBuilds;
	
	@OneToOne
	@JoinColumn(name = "image_id")
	private Image image;
	
	@OneToOne
	@JoinColumn(name = "upgrade_type_id")
	private UpgradeType type;
	
	//CONSTRUCTORS
	
	public Upgrade() {
		super();
	}

	public Upgrade(int id, String name, boolean unique, String alignment, String description, String shipType,
			int cost, List<ShipBuild> shipBuilds, Image image, UpgradeType type) {
		super();
		this.id = id;
		this.name = name;
		this.unique = unique;
		this.alignment = alignment;
		this.description = description;
		this.shipType = shipType;
		this.cost = cost;
		this.shipBuilds = shipBuilds;
		this.image = image;
		this.type = type;
	}

	//METHODS
	
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public UpgradeType getType() {
		return type;
	}

	public void setType(UpgradeType type) {
		this.type = type;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public boolean isUnique() {
		return unique;
	}

	public void setUnique(boolean unique) {
		this.unique = unique;
	}

	public String getAlignment() {
		return alignment;
	}

	public void setAlignment(String alignment) {
		this.alignment = alignment;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getShipType() {
		return shipType;
	}

	public void setShipType(String shipType) {
		this.shipType = shipType;
	}

	public int getCost() {
		return cost;
	}

	public void setCost(int cost) {
		this.cost = cost;
	}

	public List<ShipBuild> getShipBuilds() {
		return shipBuilds;
	}

	public void setShipBuilds(List<ShipBuild> shipBuilds) {
		this.shipBuilds = shipBuilds;
	}

	public Image getImage() {
		return image;
	}

	public void setImage(Image image) {
		this.image = image;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((alignment == null) ? 0 : alignment.hashCode());
		result = prime * result + cost;
		result = prime * result + ((description == null) ? 0 : description.hashCode());
		result = prime * result + id;
		result = prime * result + ((image == null) ? 0 : image.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((shipBuilds == null) ? 0 : shipBuilds.hashCode());
		result = prime * result + ((shipType == null) ? 0 : shipType.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		result = prime * result + (unique ? 1231 : 1237);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Upgrade other = (Upgrade) obj;
		if (alignment == null) {
			if (other.alignment != null)
				return false;
		} else if (!alignment.equals(other.alignment))
			return false;
		if (cost != other.cost)
			return false;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (id != other.id)
			return false;
		if (image == null) {
			if (other.image != null)
				return false;
		} else if (!image.equals(other.image))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (shipBuilds == null) {
			if (other.shipBuilds != null)
				return false;
		} else if (!shipBuilds.equals(other.shipBuilds))
			return false;
		if (shipType == null) {
			if (other.shipType != null)
				return false;
		} else if (!shipType.equals(other.shipType))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		if (unique != other.unique)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Upgrade [id=" + id + ", name=" + name + ", unique=" + unique + ", alignment=" + alignment
				+ ", description=" + description + ", shipType=" + shipType + ", cost=" + cost + "]";
	}
	
	
	
}
